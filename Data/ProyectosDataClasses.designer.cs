#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Prueba_Tecnica.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Proyecto")]
	public partial class ProyectosDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    partial void InsertInvoie_Detail(Invoie_Detail instance);
    partial void UpdateInvoie_Detail(Invoie_Detail instance);
    partial void DeleteInvoie_Detail(Invoie_Detail instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertKardex_Inventory(Kardex_Inventory instance);
    partial void UpdateKardex_Inventory(Kardex_Inventory instance);
    partial void DeleteKardex_Inventory(Kardex_Inventory instance);
    #endregion
		
		public ProyectosDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ProyectoConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ProyectosDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProyectosDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProyectosDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProyectosDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Customer> Customer
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoice
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		public System.Data.Linq.Table<Invoie_Detail> Invoie_Detail
		{
			get
			{
				return this.GetTable<Invoie_Detail>();
			}
		}
		
		public System.Data.Linq.Table<Item> Item
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<Kardex_Inventory> Kardex_Inventory
		{
			get
			{
				return this.GetTable<Kardex_Inventory>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AgregarKardex")]
		public int AgregarKardex([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ValidarItem")]
		public ISingleResult<ValidarItemResult> ValidarItem([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_Item, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Inventory_Quantity", DbType="Decimal(25,2)")] System.Nullable<decimal> inventory_Quantity)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_Item, inventory_Quantity);
			return ((ISingleResult<ValidarItemResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Buscar_Factura")]
		public ISingleResult<Buscar_FacturaResult> Buscar_Factura([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<Buscar_FacturaResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Customer;
		
		private string _Code;
		
		private string _Name_Customer;
		
		private System.Nullable<bool> _SoftDelete;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CustomerChanging(int value);
    partial void OnID_CustomerChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnName_CustomerChanging(string value);
    partial void OnName_CustomerChanged();
    partial void OnSoftDeleteChanging(System.Nullable<bool> value);
    partial void OnSoftDeleteChanged();
    #endregion
		
		public Customer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Customer", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Customer
		{
			get
			{
				return this._ID_Customer;
			}
			set
			{
				if ((this._ID_Customer != value))
				{
					this.OnID_CustomerChanging(value);
					this.SendPropertyChanging();
					this._ID_Customer = value;
					this.SendPropertyChanged("ID_Customer");
					this.OnID_CustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Customer", DbType="VarChar(100)")]
		public string Name_Customer
		{
			get
			{
				return this._Name_Customer;
			}
			set
			{
				if ((this._Name_Customer != value))
				{
					this.OnName_CustomerChanging(value);
					this.SendPropertyChanging();
					this._Name_Customer = value;
					this.SendPropertyChanged("Name_Customer");
					this.OnName_CustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoftDelete", DbType="Bit")]
		public System.Nullable<bool> SoftDelete
		{
			get
			{
				return this._SoftDelete;
			}
			set
			{
				if ((this._SoftDelete != value))
				{
					this.OnSoftDeleteChanging(value);
					this.SendPropertyChanging();
					this._SoftDelete = value;
					this.SendPropertyChanged("SoftDelete");
					this.OnSoftDeleteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_Customer;
		
		private System.Nullable<decimal> _Total;
		
		private System.Nullable<bool> _SoftDelete;
		
		private EntitySet<Invoie_Detail> _Invoie_Detail;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_CustomerChanging(System.Nullable<int> value);
    partial void OnID_CustomerChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    partial void OnSoftDeleteChanging(System.Nullable<bool> value);
    partial void OnSoftDeleteChanged();
    #endregion
		
		public Invoice()
		{
			this._Invoie_Detail = new EntitySet<Invoie_Detail>(new Action<Invoie_Detail>(this.attach_Invoie_Detail), new Action<Invoie_Detail>(this.detach_Invoie_Detail));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Customer", DbType="Int")]
		public System.Nullable<int> ID_Customer
		{
			get
			{
				return this._ID_Customer;
			}
			set
			{
				if ((this._ID_Customer != value))
				{
					this.OnID_CustomerChanging(value);
					this.SendPropertyChanging();
					this._ID_Customer = value;
					this.SendPropertyChanged("ID_Customer");
					this.OnID_CustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(25,2)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoftDelete", DbType="Bit")]
		public System.Nullable<bool> SoftDelete
		{
			get
			{
				return this._SoftDelete;
			}
			set
			{
				if ((this._SoftDelete != value))
				{
					this.OnSoftDeleteChanging(value);
					this.SendPropertyChanging();
					this._SoftDelete = value;
					this.SendPropertyChanged("SoftDelete");
					this.OnSoftDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Invoie_Detail", Storage="_Invoie_Detail", ThisKey="ID", OtherKey="ID_Invoice")]
		public EntitySet<Invoie_Detail> Invoie_Detail
		{
			get
			{
				return this._Invoie_Detail;
			}
			set
			{
				this._Invoie_Detail.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoie_Detail(Invoie_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_Invoie_Detail(Invoie_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoie_Detail")]
	public partial class Invoie_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_Invoice;
		
		private System.Nullable<int> _ID_Item;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<decimal> _Unit_Price;
		
		private System.Nullable<decimal> _Price_Total;
		
		private System.Nullable<bool> _SoftDelete;
		
		private EntityRef<Invoice> _Invoice;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_InvoiceChanging(System.Nullable<int> value);
    partial void OnID_InvoiceChanged();
    partial void OnID_ItemChanging(System.Nullable<int> value);
    partial void OnID_ItemChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnUnit_PriceChanging(System.Nullable<decimal> value);
    partial void OnUnit_PriceChanged();
    partial void OnPrice_TotalChanging(System.Nullable<decimal> value);
    partial void OnPrice_TotalChanged();
    partial void OnSoftDeleteChanging(System.Nullable<bool> value);
    partial void OnSoftDeleteChanged();
    #endregion
		
		public Invoie_Detail()
		{
			this._Invoice = default(EntityRef<Invoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Invoice", DbType="Int")]
		public System.Nullable<int> ID_Invoice
		{
			get
			{
				return this._ID_Invoice;
			}
			set
			{
				if ((this._ID_Invoice != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_InvoiceChanging(value);
					this.SendPropertyChanging();
					this._ID_Invoice = value;
					this.SendPropertyChanged("ID_Invoice");
					this.OnID_InvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Item", DbType="Int")]
		public System.Nullable<int> ID_Item
		{
			get
			{
				return this._ID_Item;
			}
			set
			{
				if ((this._ID_Item != value))
				{
					this.OnID_ItemChanging(value);
					this.SendPropertyChanging();
					this._ID_Item = value;
					this.SendPropertyChanged("ID_Item");
					this.OnID_ItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(25,2)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(25,2)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_Price", DbType="Decimal(25,2)")]
		public System.Nullable<decimal> Unit_Price
		{
			get
			{
				return this._Unit_Price;
			}
			set
			{
				if ((this._Unit_Price != value))
				{
					this.OnUnit_PriceChanging(value);
					this.SendPropertyChanging();
					this._Unit_Price = value;
					this.SendPropertyChanged("Unit_Price");
					this.OnUnit_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price_Total", DbType="Decimal(25,2)")]
		public System.Nullable<decimal> Price_Total
		{
			get
			{
				return this._Price_Total;
			}
			set
			{
				if ((this._Price_Total != value))
				{
					this.OnPrice_TotalChanging(value);
					this.SendPropertyChanging();
					this._Price_Total = value;
					this.SendPropertyChanged("Price_Total");
					this.OnPrice_TotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoftDelete", DbType="Bit")]
		public System.Nullable<bool> SoftDelete
		{
			get
			{
				return this._SoftDelete;
			}
			set
			{
				if ((this._SoftDelete != value))
				{
					this.OnSoftDeleteChanging(value);
					this.SendPropertyChanging();
					this._SoftDelete = value;
					this.SendPropertyChanged("SoftDelete");
					this.OnSoftDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Invoie_Detail", Storage="_Invoice", ThisKey="ID_Invoice", OtherKey="ID", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.Invoie_Detail.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.Invoie_Detail.Add(this);
						this._ID_Invoice = value.ID;
					}
					else
					{
						this._ID_Invoice = default(Nullable<int>);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Item;
		
		private string _Code;
		
		private string _Name_Item;
		
		private System.Nullable<decimal> _Inventory_Quantity;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<decimal> _Unit_Price;
		
		private System.Nullable<bool> _SoftDelete;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ItemChanging(int value);
    partial void OnID_ItemChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnName_ItemChanging(string value);
    partial void OnName_ItemChanged();
    partial void OnInventory_QuantityChanging(System.Nullable<decimal> value);
    partial void OnInventory_QuantityChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnUnit_PriceChanging(System.Nullable<decimal> value);
    partial void OnUnit_PriceChanged();
    partial void OnSoftDeleteChanging(System.Nullable<bool> value);
    partial void OnSoftDeleteChanged();
    #endregion
		
		public Item()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Item", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Item
		{
			get
			{
				return this._ID_Item;
			}
			set
			{
				if ((this._ID_Item != value))
				{
					this.OnID_ItemChanging(value);
					this.SendPropertyChanging();
					this._ID_Item = value;
					this.SendPropertyChanged("ID_Item");
					this.OnID_ItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Item", DbType="VarChar(100)")]
		public string Name_Item
		{
			get
			{
				return this._Name_Item;
			}
			set
			{
				if ((this._Name_Item != value))
				{
					this.OnName_ItemChanging(value);
					this.SendPropertyChanging();
					this._Name_Item = value;
					this.SendPropertyChanged("Name_Item");
					this.OnName_ItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inventory_Quantity", DbType="Decimal(25,2)")]
		public System.Nullable<decimal> Inventory_Quantity
		{
			get
			{
				return this._Inventory_Quantity;
			}
			set
			{
				if ((this._Inventory_Quantity != value))
				{
					this.OnInventory_QuantityChanging(value);
					this.SendPropertyChanging();
					this._Inventory_Quantity = value;
					this.SendPropertyChanged("Inventory_Quantity");
					this.OnInventory_QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(25,2)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_Price", DbType="Decimal(25,2)")]
		public System.Nullable<decimal> Unit_Price
		{
			get
			{
				return this._Unit_Price;
			}
			set
			{
				if ((this._Unit_Price != value))
				{
					this.OnUnit_PriceChanging(value);
					this.SendPropertyChanging();
					this._Unit_Price = value;
					this.SendPropertyChanged("Unit_Price");
					this.OnUnit_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoftDelete", DbType="Bit")]
		public System.Nullable<bool> SoftDelete
		{
			get
			{
				return this._SoftDelete;
			}
			set
			{
				if ((this._SoftDelete != value))
				{
					this.OnSoftDeleteChanging(value);
					this.SendPropertyChanging();
					this._SoftDelete = value;
					this.SendPropertyChanged("SoftDelete");
					this.OnSoftDeleteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kardex_Inventory")]
	public partial class Kardex_Inventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Kardex_Inventory;
		
		private System.Nullable<int> _ID_Item;
		
		private System.Nullable<decimal> _Quantity;
		
		private string _Type_Inventory;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_Kardex_InventoryChanging(int value);
    partial void OnID_Kardex_InventoryChanged();
    partial void OnID_ItemChanging(System.Nullable<int> value);
    partial void OnID_ItemChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnType_InventoryChanging(string value);
    partial void OnType_InventoryChanged();
    #endregion
		
		public Kardex_Inventory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Kardex_Inventory", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Kardex_Inventory
		{
			get
			{
				return this._ID_Kardex_Inventory;
			}
			set
			{
				if ((this._ID_Kardex_Inventory != value))
				{
					this.OnID_Kardex_InventoryChanging(value);
					this.SendPropertyChanging();
					this._ID_Kardex_Inventory = value;
					this.SendPropertyChanged("ID_Kardex_Inventory");
					this.OnID_Kardex_InventoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Item", DbType="Int")]
		public System.Nullable<int> ID_Item
		{
			get
			{
				return this._ID_Item;
			}
			set
			{
				if ((this._ID_Item != value))
				{
					this.OnID_ItemChanging(value);
					this.SendPropertyChanging();
					this._ID_Item = value;
					this.SendPropertyChanged("ID_Item");
					this.OnID_ItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(25,2)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_Inventory", DbType="VarChar(50)")]
		public string Type_Inventory
		{
			get
			{
				return this._Type_Inventory;
			}
			set
			{
				if ((this._Type_Inventory != value))
				{
					this.OnType_InventoryChanging(value);
					this.SendPropertyChanging();
					this._Type_Inventory = value;
					this.SendPropertyChanged("Type_Inventory");
					this.OnType_InventoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class ValidarItemResult
	{
		
		private System.Nullable<decimal> _Cost;
		
		public ValidarItemResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(25,2)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this._Cost = value;
				}
			}
		}
	}
	
	public partial class Buscar_FacturaResult
	{
		
		private System.Nullable<int> _ID_Customer;
		
		private int _ID_Documento;
		
		private int _ID_Detalle;
		
		private string _Code;
		
		private string _Name_Item;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<decimal> _Unit_Price;
		
		private System.Nullable<decimal> _Price_Total;
		
		public Buscar_FacturaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Customer", DbType="Int")]
		public System.Nullable<int> ID_Customer
		{
			get
			{
				return this._ID_Customer;
			}
			set
			{
				if ((this._ID_Customer != value))
				{
					this._ID_Customer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Documento", DbType="Int NOT NULL")]
		public int ID_Documento
		{
			get
			{
				return this._ID_Documento;
			}
			set
			{
				if ((this._ID_Documento != value))
				{
					this._ID_Documento = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Detalle", DbType="Int NOT NULL")]
		public int ID_Detalle
		{
			get
			{
				return this._ID_Detalle;
			}
			set
			{
				if ((this._ID_Detalle != value))
				{
					this._ID_Detalle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Item", DbType="VarChar(100)")]
		public string Name_Item
		{
			get
			{
				return this._Name_Item;
			}
			set
			{
				if ((this._Name_Item != value))
				{
					this._Name_Item = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(25,2)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_Price", DbType="Decimal(25,2)")]
		public System.Nullable<decimal> Unit_Price
		{
			get
			{
				return this._Unit_Price;
			}
			set
			{
				if ((this._Unit_Price != value))
				{
					this._Unit_Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price_Total", DbType="Decimal(25,2)")]
		public System.Nullable<decimal> Price_Total
		{
			get
			{
				return this._Price_Total;
			}
			set
			{
				if ((this._Price_Total != value))
				{
					this._Price_Total = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
